;; Analyzed by ClojureScript 1.8.51
{:use-macros {html sablono.core, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name template.ui, :imports nil, :requires {dispatch template.dispatch, template.dispatch template.dispatch, util template.util, template.util template.util, pages template.pages, template.pages template.pages}, :uses {render-page template.pages}, :defs {header {:name template.ui/header, :file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :line 10, :column 1, :end-line 10, :end-column 12, :meta {:file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :line 10, :column 6, :end-line 10, :end-column 12}}, title {:protocol-inline nil, :meta {:file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :line 30, :column 7, :end-line 30, :end-column 12, :arglists (quote ([state]))}, :name template.ui/title, :variadic false, :file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :end-column 12, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, summary {:protocol-inline nil, :meta {:file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :line 48, :column 7, :end-line 48, :end-column 14, :arglists (quote ([state]))}, :name template.ui/summary, :variadic false, :file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :end-column 14, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, page {:protocol-inline nil, :meta {:file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :line 75, :column 7, :end-line 75, :end-column 11, :arglists (quote ([state]))}, :name template.ui/page, :variadic false, :file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :end-column 11, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, app {:protocol-inline nil, :meta {:file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :line 118, :column 7, :end-line 118, :end-column 10, :arglists (quote ([state]))}, :name template.ui/app, :variadic false, :file "/home/baspar/Stage/cljs-slides/src/template/ui.cljs", :end-column 10, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros {dc devcards.core, devcards.core devcards.core, sab sablono.core, sablono.core sablono.core}, :cljs.analyzer/constants {:seen #{:align-items :max-height :transform :ul :color :font-size :transition :top :font-weight :overflow :preserveAspectRatio :li :fill :background-color :slides :width :points :max-width :title :style :div :z-index :anim :opacity :id :menu-visible :justify-content :svg :display :position :groups :viewBox :pointer-events :height :polygon :left}, :order [:svg :height :width :viewBox :preserveAspectRatio :polygon :points :fill :div :style :transform :position :top :font-size :font-weight :color :left :anim :title :z-index :display :max-width :max-height :pointer-events :overflow :align-items :transition :background-color :opacity :justify-content :menu-visible :ul :li :slides :groups :id]}, :doc nil}