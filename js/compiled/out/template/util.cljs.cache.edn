;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name template.util, :imports nil, :requires {template.pages template.pages}, :uses {groups template.pages}, :defs {get-group {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 6, :column 7, :end-line 6, :end-column 16, :arglists (quote ([state] [state slide])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}}, :name template.util/get-group, :variadic false, :file "src/template/util.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}, :method-params ([state] [state slide]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state slide])}, get-slide {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 12, :column 7, :end-line 12, :end-column 16, :arglists (quote ([state] [state slide])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}}, :name template.util/get-slide, :variadic false, :file "src/template/util.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}, :method-params ([state] [state slide]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state slide])}, whos-previous {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 19, :column 7, :end-line 19, :end-column 20, :arglists (quote ([state] [state slide])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}}, :name template.util/whos-previous, :variadic false, :file "src/template/util.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}, :method-params ([state] [state slide]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state slide])}, whos-next {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 31, :column 7, :end-line 31, :end-column 16, :arglists (quote ([state] [state slide])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}}, :name template.util/whos-next, :variadic false, :file "src/template/util.cljs", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state slide]), :arglists ([state] [state slide]), :arglists-meta (nil nil)}, :method-params ([state] [state slide]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state slide])}, go-to {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 45, :column 7, :end-line 45, :end-column 12, :arglists (quote ([state slide]))}, :name template.util/go-to, :variadic false, :file "src/template/util.cljs", :end-column 12, :method-params ([state slide]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state slide]))}, go-to-previous {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 52, :column 7, :end-line 52, :end-column 21, :arglists (quote ([state]))}, :name template.util/go-to-previous, :variadic false, :file "src/template/util.cljs", :end-column 21, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}, go-to-next {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/util.cljs", :line 55, :column 7, :end-line 55, :end-column 17, :arglists (quote ([state]))}, :name template.util/go-to-next, :variadic false, :file "src/template/util.cljs", :end-column 17, :method-params ([state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([state]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:slide-shown :anim :nb-pauses}, :order [:slide-shown :nb-pauses :anim]}, :doc nil}