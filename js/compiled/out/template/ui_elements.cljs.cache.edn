;; Analyzed by ClojureScript 1.8.51
{:use-macros nil, :excludes #{}, :name template.ui_elements, :imports nil, :requires nil, :uses nil, :defs {question-block {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/ui_elements.cljs", :line 3, :column 7, :end-line 3, :end-column 21, :arglists (quote ([title objs]))}, :name template.ui_elements/question-block, :variadic false, :file "src/template/ui_elements.cljs", :end-column 21, :method-params ([title objs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 2, :fn-var true, :arglists (quote ([title objs]))}, block {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/ui_elements.cljs", :line 16, :column 7, :end-line 16, :end-column 12, :arglists (quote ([title objs]))}, :name template.ui_elements/block, :variadic false, :file "src/template/ui_elements.cljs", :end-column 12, :method-params ([title objs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 2, :fn-var true, :arglists (quote ([title objs]))}, rows {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/ui_elements.cljs", :line 29, :column 7, :end-line 29, :end-column 11, :arglists (quote ([objs]))}, :name template.ui_elements/rows, :variadic false, :file "src/template/ui_elements.cljs", :end-column 11, :method-params ([objs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([objs]))}, cols {:protocol-inline nil, :meta {:file "/home/baspar/PaloIT/cljs-slides/src/template/ui_elements.cljs", :line 42, :column 7, :end-line 42, :end-column 11, :arglists (quote ([objs]))}, :name template.ui_elements/cols, :variadic false, :file "src/template/ui_elements.cljs", :end-column 11, :method-params ([objs]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 1, :fn-var true, :arglists (quote ([objs]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:align-items :box-shadow :color :font-size :background-color :flex-grow :style :div :padding :justify-content :display :flex-direction :margin}, :order [:div :style :background-color :padding :font-size :color :flex-grow :display :flex-direction :box-shadow :justify-content :align-items :margin]}, :doc nil}